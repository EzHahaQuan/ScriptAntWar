--[[ Bite Aura Menu Script (Roblox Lua) - Adds a simple toggle menu (Enable/Disable) for the bite aura - Loads and runs your provided script logic *only when enabled* - Press "P" or click UI button to toggle ON/OFF - Place as a LocalScript in StarterPlayerScripts ]] local ReplicatedStorage = game:GetService("ReplicatedStorage") local Players = game:GetService("Players") local Player = Players.LocalPlayer local UIS = game:GetService("UserInputService") local active = false -- Start disabled -- UI Setup local function createToggleMenu() local gui = Instance.new("ScreenGui") gui.Name = "BiteAuraMenu" gui.ResetOnSpawn = false local button = Instance.new("TextButton") button.Size = UDim2.new(0, 160, 0, 44) button.Position = UDim2.new(0, 20, 0, 100) button.Text = "Bite Aura: OFF" button.BackgroundColor3 = Color3.fromRGB(60,60,60) button.TextColor3 = Color3.new(1,1,1) button.Font = Enum.Font.SourceSansBold button.TextSize = 22 button.Parent = gui button.MouseButton1Click:Connect(function() active = not active button.Text = "Bite Aura: " .. (active and "ON" or "OFF") button.BackgroundColor3 = active and Color3.fromRGB(0,180,80) or Color3.fromRGB(60,60,60) end) gui.Parent = Player:WaitForChild("PlayerGui") return button end -- Provided logic (wrapped for activation) local function getClosestPlayer() local closestDistance = math.huge local closestPlayer = nil for _, otherPlayer in ipairs(Players:GetPlayers()) do if otherPlayer ~= Player then local character = otherPlayer.Character if character and character:FindFirstChild("HumanoidRootPart") and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then local distance = (character.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).magnitude if distance < closestDistance then closestDistance = distance closestPlayer = otherPlayer end end end end return closestPlayer end local function bitePlayer(targetPlayer) local args = { [1] = "Bite", [2] = targetPlayer.Character.Humanoid, [3] = targetPlayer.Character.BiteHitbox } ReplicatedStorage:WaitForChild("ServerEvents"):WaitForChild("Bite"):FireServer(unpack(args)) end local function biteAuraLoop() while true do if active then local targetPlayer = getClosestPlayer() if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character:FindFirstChild("BiteHitbox") then bitePlayer(targetPlayer) end end wait(0.1) end end -- Keyboard toggle UIS.InputBegan:Connect(function(input, processed) if processed then return end if input.KeyCode == Enum.KeyCode.P then active = not active local gui = Player.PlayerGui:FindFirstChild("BiteAuraMenu") if gui and gui:FindFirstChildWhichIsA("TextButton") then local button = gui:FindFirstChildWhichIsA("TextButton") button.Text = "Bite Aura: " .. (active and "ON" or "OFF") button.BackgroundColor3 = active and Color3.fromRGB(0,180,80) or Color3.fromRGB(60,60,60) end end end) createToggleMenu() biteAuraLoop()
